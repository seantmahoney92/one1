{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { FlexibleWidthXYPlot, HorizontalGridLines, MarkSeries, VerticalGridLines, XAxis, YAxis } from 'react-vis';\nimport { RefreshCcw } from 'react-feather';\nimport { Select } from 'antd';\nimport ShowcaseButton from '../showcase-components/showcase-button';\nvar Option = Select.Option;\n\nfunction generateData() {\n  return _toConsumableArray(new Array(10)).map(function (row) {\n    return {\n      x: Math.random() * 5,\n      y: Math.random() * 10\n    };\n  });\n}\n\nvar MODE = ['noWobble', 'gentle', 'wobbly', 'stiff'];\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: generateData(),\n      modeIndex: MODE[0]\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateModeIndex\", function (value) {\n      _this.setState({\n        modeIndex: value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          modeIndex = _this$state.modeIndex,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"centered-and-flexed\"\n      }, React.createElement(Select, {\n        defaultValue: modeIndex,\n        onChange: this.updateModeIndex,\n        size: \"small\",\n        className: \"mr-2\"\n      }, MODE.map(function (mode, index) {\n        return React.createElement(Option, {\n          value: mode,\n          key: index\n        }, mode);\n      })), React.createElement(ShowcaseButton, {\n        onClick: function onClick() {\n          return _this2.setState({\n            data: generateData()\n          });\n        },\n        buttonContent: React.createElement(RefreshCcw, {\n          size: 14,\n          strokeWidth: 1\n        })\n      }), React.createElement(FlexibleWidthXYPlot, {\n        height: 276\n      }, React.createElement(VerticalGridLines, null), React.createElement(HorizontalGridLines, null), React.createElement(XAxis, null), React.createElement(YAxis, null), React.createElement(MarkSeries, {\n        animation: modeIndex,\n        data: data,\n        color: \"#007bff\"\n      })));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}