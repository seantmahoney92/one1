{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Tree } from 'antd';\nvar TreeNode = Tree.TreeNode;\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar gData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || gData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\n\nvar Demo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Demo, _React$Component);\n\n  function Demo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Demo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      gData: gData,\n      expandedKeys: ['0-0', '0-0-0', '0-0-0-0']\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragEnter\", function (info) {\n      console.log(info); // expandedKeys 需要受控时设置\n      // this.setState({\n      //   expandedKeys: info.expandedKeys,\n      // });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDrop\", function (info) {\n      console.log(info);\n      var dropKey = info.node.props.eventKey;\n      var dragKey = info.dragNode.props.eventKey;\n      var dropPos = info.node.props.pos.split('-');\n      var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n      var loop = function loop(data, key, callback) {\n        data.forEach(function (item, index, arr) {\n          if (item.key === key) {\n            return callback(item, index, arr);\n          }\n\n          if (item.children) {\n            return loop(item.children, key, callback);\n          }\n        });\n      };\n\n      var data = _toConsumableArray(_this.state.gData); // Find dragObject\n\n\n      var dragObj;\n      loop(data, dragKey, function (item, index, arr) {\n        arr.splice(index, 1);\n        dragObj = item;\n      });\n\n      if (!info.dropToGap) {\n        // Drop on the content\n        loop(data, dropKey, function (item) {\n          item.children = item.children || []; // where to insert 示例添加到尾部，可以是随意位置\n\n          item.children.push(dragObj);\n        });\n      } else if ((info.node.props.children || []).length > 0 && // Has children\n      info.node.props.expanded && // Is expanded\n      dropPosition === 1 // On the bottom gap\n      ) {\n          loop(data, dropKey, function (item) {\n            item.children = item.children || []; // where to insert 示例添加到尾部，可以是随意位置\n\n            item.children.unshift(dragObj);\n          });\n        } else {\n        var ar;\n        var i;\n        loop(data, dropKey, function (item, index, arr) {\n          ar = arr;\n          i = index;\n        });\n\n        if (dropPosition === -1) {\n          ar.splice(i, 0, dragObj);\n        } else {\n          ar.splice(i + 1, 0, dragObj);\n        }\n      }\n\n      _this.setState({\n        gData: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var loop = function loop(data) {\n        return data.map(function (item) {\n          if (item.children && item.children.length) {\n            return React.createElement(TreeNode, {\n              key: item.key,\n              title: item.title\n            }, loop(item.children));\n          }\n\n          return React.createElement(TreeNode, {\n            key: item.key,\n            title: item.title\n          });\n        });\n      };\n\n      return React.createElement(Tree, {\n        className: \"draggable-tree\",\n        defaultExpandedKeys: this.state.expandedKeys,\n        draggable: true,\n        onDragEnter: this.onDragEnter,\n        onDrop: this.onDrop\n      }, loop(this.state.gData));\n    }\n  }]);\n\n  return Demo;\n}(React.Component);\n\nexport default Demo;","map":null,"metadata":{},"sourceType":"module"}