{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { ArcSeries, FlexibleWidthXYPlot } from 'react-vis';\nvar PI = Math.PI;\nvar DIVERGING_COLOR_SCALE = ['#007bff', '#52c41a', '#f5222d', '#faad14'];\n\nfunction getSeconds() {\n  return Math.floor(new Date().getTime() / 1000);\n}\n\nvar ClockExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClockExample, _React$Component);\n\n  function ClockExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClockExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClockExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      time: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(ClockExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._timerId = setInterval(function () {\n        return _this2.setState({\n          time: getSeconds()\n        });\n      }, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this._timerId);\n      this.setState({\n        timerId: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var time = this.state.time;\n      var seconds = time % 60;\n      var minutes = time / 60 % 60;\n      var hours = time / (60 * 24) % 24;\n      return React.createElement(FlexibleWidthXYPlot, {\n        className: \"m-auto\",\n        xDomain: [-3, 3],\n        yDomain: [-3, 3],\n        getAngle: function getAngle(d) {\n          return d.time;\n        },\n        getAngle0: function getAngle0(d) {\n          return 0;\n        },\n        height: 300\n      }, React.createElement(ArcSeries, {\n        animation: {\n          damping: 9,\n          stiffness: 300\n        },\n        radiusDomain: [0, 3],\n        data: [{\n          time: seconds / 60 * 2 * PI,\n          radius0: 1,\n          radius: 1.5,\n          color: 0\n        }, {\n          time: minutes / 60 * 2 * PI,\n          radius0: 1.6,\n          radius: 2.1,\n          color: 1\n        }, {\n          time: hours / 24 * 2 * PI,\n          radius0: 2.2,\n          radius: 2.7,\n          color: 2\n        }],\n        colorRange: DIVERGING_COLOR_SCALE\n      }));\n    }\n  }]);\n\n  return ClockExample;\n}(React.Component);\n\nexport { ClockExample as default };","map":null,"metadata":{},"sourceType":"module"}