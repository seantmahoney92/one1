{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/one1/components/MapMarkers.js\";\nimport React from \"react\";\nimport MapGL, { Marker, NavigationControl, Popup } from 'react-map-gl';\nimport CITIES from '../demos/mock/cities.json';\nimport CityInfo from '../demos/map-gl/city-info';\nimport CityPin from '../demos/map-gl/city-pin';\nimport { Component } from 'react';\n\nvar MapMarkers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapMarkers, _Component);\n\n  function MapMarkers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapMarkers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapMarkers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 3.5,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateViewport\", function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCityMarker\", function (city, index) {\n      return React.createElement(Marker, {\n        key: \"marker-\".concat(index),\n        longitude: city.longitude,\n        latitude: city.latitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(CityPin, {\n        size: 20,\n        onClick: function onClick() {\n          return _this.setState({\n            popupInfo: city\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(MapMarkers, [{\n    key: \"_renderPopup\",\n    value: function _renderPopup() {\n      var _this2 = this;\n\n      var popupInfo = this.state.popupInfo;\n      return popupInfo && React.createElement(Popup, {\n        tipSize: 5,\n        anchor: \"top\",\n        longitude: popupInfo.longitude,\n        latitude: popupInfo.latitude,\n        onClose: function onClose() {\n          return _this2.setState({\n            popupInfo: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(CityInfo, {\n        info: popupInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewport = this.state.viewport;\n      return React.createElement(\"div\", {\n        className: \"full-workspace\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(MapGL, _extends({}, viewport, {\n        width: \"100%\",\n        height: \"100%\",\n        mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n        onViewportChange: this._updateViewport,\n        mapboxApiAccessToken: process.env.mapBoxApi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), CITIES.map(this._renderCityMarker), this._renderPopup(), React.createElement(NavigationControl, {\n        onViewportChange: this._updateViewport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapMarkers;\n}(Component);\n\nexport default MapMarkers;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/one1/components/MapMarkers.js"],"names":["MapGL","Marker","NavigationControl","Popup","CITIES","CityInfo","CityPin","Component","MapMarkers","viewport","latitude","longitude","zoom","bearing","pitch","popupInfo","setState","city","index","state","_updateViewport","process","env","mapBoxApi","map","_renderCityMarker","_renderPopup"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,iBAAxB,EAA2CC,KAA3C,QAAwD,cAAxD;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;;IAEMC,U;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,SADF;AAERC,QAAAA,SAAS,EAAE,CAAC,GAFJ;AAGRC,QAAAA,IAAI,EAAE,GAHE;AAIRC,QAAAA,OAAO,EAAE,CAJD;AAKRC,QAAAA,KAAK,EAAE;AALC,OADJ;AAQNC,MAAAA,SAAS,EAAE;AARL,K;;sEAWU,UAAAN,QAAQ,EAAI;AAC5B,YAAKO,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;wEAEmB,UAACQ,IAAD,EAAOC,KAAP;AAAA,aAClB,oBAAC,MAAD;AACE,QAAA,GAAG,mBAAYA,KAAZ,CADL;AAEE,QAAA,SAAS,EAAED,IAAI,CAACN,SAFlB;AAGE,QAAA,QAAQ,EAAEM,IAAI,CAACP,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,EAAf;AAAmB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKM,QAAL,CAAc;AAAED,YAAAA,SAAS,EAAEE;AAAb,WAAd,CAAN;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADkB;AAAA,K;;;;;;;mCAUL;AAAA;;AAAA,UACLF,SADK,GACS,KAAKI,KADd,CACLJ,SADK;AAGb,aACEA,SAAS,IACP,oBAAC,KAAD;AACE,QAAA,OAAO,EAAE,CADX;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,SAAS,EAAEA,SAAS,CAACJ,SAHvB;AAIE,QAAA,QAAQ,EAAEI,SAAS,CAACL,QAJtB;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACM,QAAL,CAAc;AAAED,YAAAA,SAAS,EAAE;AAAb,WAAd,CAAN;AAAA,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAFJ;AAaD;;;6BAEQ;AAAA,UACCN,QADD,GACc,KAAKU,KADnB,CACCV,QADD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,eACMA,QADN;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC,MAHT;AAIE,QAAA,QAAQ,EAAC,gCAJX;AAKE,QAAA,gBAAgB,EAAE,KAAKW,eALzB;AAME,QAAA,oBAAoB,EAAEC,OAAO,CAACC,GAAR,CAAYC,SANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQGnB,MAAM,CAACoB,GAAP,CAAW,KAAKC,iBAAhB,CARH,EASG,KAAKC,YAAL,EATH,EAUE,oBAAC,iBAAD;AAAmB,QAAA,gBAAgB,EAAE,KAAKN,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADF;AAgBD;;;;EA/DsBb,S;;AAkEzB,eAAeC,UAAf","sourcesContent":["import MapGL, { Marker, NavigationControl, Popup } from 'react-map-gl';\n\nimport CITIES from '../demos/mock/cities.json';\nimport CityInfo from '../demos/map-gl/city-info';\nimport CityPin from '../demos/map-gl/city-pin';\nimport { Component } from 'react';\n\nclass MapMarkers extends Component {\n  state = {\n    viewport: {\n      latitude: 37.785164,\n      longitude: -100,\n      zoom: 3.5,\n      bearing: 0,\n      pitch: 0\n    },\n    popupInfo: null\n  };\n\n  _updateViewport = viewport => {\n    this.setState({ viewport });\n  };\n\n  _renderCityMarker = (city, index) => (\n    <Marker\n      key={`marker-${index}`}\n      longitude={city.longitude}\n      latitude={city.latitude}\n    >\n      <CityPin size={20} onClick={() => this.setState({ popupInfo: city })} />\n    </Marker>\n  );\n\n  _renderPopup() {\n    const { popupInfo } = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          onClose={() => this.setState({ popupInfo: null })}\n        >\n          <CityInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  render() {\n    const { viewport } = this.state;\n\n    return (\n      <div className=\"full-workspace\">\n        <MapGL\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n          onViewportChange={this._updateViewport}\n          mapboxApiAccessToken={process.env.mapBoxApi}\n        >\n          {CITIES.map(this._renderCityMarker)}\n          {this._renderPopup()}\n          <NavigationControl onViewportChange={this._updateViewport} />\n        </MapGL>\n      </div>\n    );\n  }\n}\n\nexport default MapMarkers;\n"]},"metadata":{},"sourceType":"module"}