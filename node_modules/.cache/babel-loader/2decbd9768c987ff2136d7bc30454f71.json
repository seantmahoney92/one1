{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\n\n// a little function to help us with reordering the result\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = _Array$from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nexport default reorder;\nexport var reorderQuoteMap = function reorderQuoteMap(_ref) {\n  var _objectSpread3;\n\n  var quoteMap = _ref.quoteMap,\n      source = _ref.source,\n      destination = _ref.destination;\n\n  var current = _toConsumableArray(quoteMap[source.droppableId]);\n\n  var next = _toConsumableArray(quoteMap[destination.droppableId]);\n\n  var target = current[source.index];\n\n  if (source.droppableId === destination.droppableId) {\n    var reordered = reorder(current, source.index, destination.index);\n\n    var _result = _objectSpread({}, quoteMap, _defineProperty({}, source.droppableId, reordered));\n\n    return {\n      quoteMap: _result\n    };\n  }\n\n  current.splice(source.index, 1);\n  next.splice(destination.index, 0, target);\n\n  var result = _objectSpread({}, quoteMap, (_objectSpread3 = {}, _defineProperty(_objectSpread3, source.droppableId, current), _defineProperty(_objectSpread3, destination.droppableId, next), _objectSpread3));\n\n  return {\n    quoteMap: result\n  };\n};","map":null,"metadata":{},"sourceType":"module"}