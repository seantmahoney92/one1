{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Hint, Sunburst } from 'react-vis';\nimport { EXTENDED_DISCRETE_COLOR_RANGE as COLORS } from 'react-vis/dist/theme';\nvar DATA = {\n  children: [{\n    children: [{\n      bigness: 1,\n      children: [],\n      clr: COLORS[1],\n      name: 'excellent'\n    }, {\n      bigness: 1,\n      children: [],\n      clr: COLORS[2],\n      name: 'chart'\n    }],\n    clr: COLORS[3]\n  }, {\n    bigness: 1,\n    children: [],\n    clr: COLORS[4],\n    name: 'cool',\n    labelStyle: {\n      fontSize: 15,\n      fontWeight: 'bold'\n    }\n  }, {\n    bigness: 1,\n    children: [],\n    clr: COLORS[5],\n    name: 'dogs'\n  }, {\n    bigness: 1,\n    children: [],\n    clr: COLORS[6],\n    name: 'sunglasses'\n  }, {\n    children: [{\n      bigness: 1,\n      children: [],\n      clr: COLORS[7],\n      name: 'great'\n    }, {\n      bigness: 1,\n      children: [],\n      clr: COLORS[8],\n      name: 'label'\n    }],\n    clr: COLORS[9]\n  }]\n};\nvar tipStyle = {\n  display: 'flex',\n  color: '#fff',\n  background: '#000',\n  alignItems: 'center',\n  padding: '5px'\n};\nvar boxStyle = {\n  height: '10px',\n  width: '10px'\n};\n\nfunction buildValue(hoveredCell) {\n  var radius = hoveredCell.radius,\n      angle = hoveredCell.angle,\n      angle0 = hoveredCell.angle0;\n  var truedAngle = (angle + angle0) / 2;\n  return {\n    x: radius * Math.cos(truedAngle),\n    y: radius * Math.sin(truedAngle)\n  };\n}\n\nvar SunburstWithTooltips =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SunburstWithTooltips, _React$Component);\n\n  function SunburstWithTooltips() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SunburstWithTooltips);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SunburstWithTooltips)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hoveredCell: false\n    });\n\n    return _this;\n  }\n\n  _createClass(SunburstWithTooltips, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hoveredCell = this.state.hoveredCell;\n      return React.createElement(Sunburst, {\n        data: DATA,\n        className: \"m-auto\",\n        style: {\n          stroke: '#fff'\n        },\n        onValueMouseOver: function onValueMouseOver(v) {\n          return _this2.setState({\n            hoveredCell: v.x && v.y ? v : false\n          });\n        },\n        onValueMouseOut: function onValueMouseOut(v) {\n          return _this2.setState({\n            hoveredCell: false\n          });\n        },\n        height: 300,\n        margin: {\n          top: 50,\n          bottom: 50,\n          left: 50,\n          right: 50\n        },\n        getLabel: function getLabel(d) {\n          return d.name;\n        },\n        getSize: function getSize(d) {\n          return d.bigness;\n        },\n        getColor: function getColor(d) {\n          return d.clr;\n        },\n        width: 350,\n        padAngle: function padAngle() {\n          return 0.02;\n        }\n      }, hoveredCell ? React.createElement(Hint, {\n        value: buildValue(hoveredCell)\n      }, React.createElement(\"div\", {\n        style: tipStyle\n      }, React.createElement(\"div\", {\n        style: _objectSpread({}, boxStyle, {\n          background: hoveredCell.clr\n        })\n      }), hoveredCell.clr)) : null);\n    }\n  }]);\n\n  return SunburstWithTooltips;\n}(React.Component);\n\nexport { SunburstWithTooltips as default };","map":null,"metadata":{},"sourceType":"module"}