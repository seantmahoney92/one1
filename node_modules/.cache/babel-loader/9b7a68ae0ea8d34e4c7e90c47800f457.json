{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { FlexibleWidthXYPlot, Highlight, HorizontalGridLines, MarkSeries, VerticalGridLines, XAxis, YAxis } from 'react-vis';\nimport { generateSeededRandom } from '../showcase-utils';\nvar seededRandom = generateSeededRandom(36); // randomly generated data\n\nvar data = _toConsumableArray(new Array(10)).map(function (row) {\n  return {\n    x: seededRandom() * 3,\n    y: seededRandom() * 11 + 4,\n    size: seededRandom() * 30 + 1\n  };\n});\n\nvar SelectionPlotExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectionPlotExample, _React$Component);\n\n  function SelectionPlotExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectionPlotExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectionPlotExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      filter: null\n    });\n\n    return _this;\n  }\n\n  _createClass(SelectionPlotExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filter = this.state.filter;\n\n      var highlightPoint = function highlightPoint(d) {\n        if (!filter) {\n          return false;\n        }\n\n        return d.y <= filter.top && d.y >= filter.bottom;\n      };\n\n      var numSelectedPoints = filter ? data.filter(highlightPoint).length : 0;\n      return React.createElement(\"div\", null, React.createElement(FlexibleWidthXYPlot, {\n        height: 300\n      }, React.createElement(VerticalGridLines, null), React.createElement(HorizontalGridLines, null), React.createElement(XAxis, null), React.createElement(YAxis, null), React.createElement(MarkSeries, {\n        className: \"mark-series-example\",\n        sizeRange: [5, 15],\n        colorType: \"literal\",\n        getColor: function getColor(d) {\n          return highlightPoint(d) ? '#f5222d' : '#007bff';\n        },\n        data: data\n      }), React.createElement(Highlight, {\n        enableX: false,\n        className: \"selection-example\",\n        onBrush: function onBrush(area) {\n          return _this2.setState({\n            filter: area\n          });\n        },\n        onBrushEnd: function onBrushEnd(area) {\n          return _this2.setState({\n            filter: area\n          });\n        }\n      })), React.createElement(\"p\", null, \"There are \".concat(numSelectedPoints, \" selected points\")));\n    }\n  }]);\n\n  return SelectionPlotExample;\n}(React.Component);\n\nexport { SelectionPlotExample as default };","map":null,"metadata":{},"sourceType":"module"}