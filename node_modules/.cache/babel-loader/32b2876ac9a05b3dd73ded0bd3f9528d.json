{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  bottom: 0;\\n  z-index: 1;\\n  width: 40px;\\n  right: 2rem;\\n  padding: 0 2rem;\\n  margin-bottom: 2rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Anchor, CheckCircle, Heart, Image, MessageCircle, Mic, RefreshCcw, Search as SearchIcon, Settings, Star } from 'react-feather';\nimport { Avatar, Button, Drawer, Input, Layout, List, Menu, Row } from 'antd';\nimport ChatStyled from './styles/Chat';\nimport MockChats from '../demos/mock/chats';\nimport MockContacts from '../demos/mock/contacts';\nimport format from 'date-fns/format';\nimport styled from 'styled-components';\nimport { useAppState } from './shared/AppProvider';\nimport { useState } from 'react';\nvar Sider = Layout.Sider,\n    Header = Layout.Header;\nvar TextArea = Input.TextArea,\n    Search = Input.Search;\nvar SubMenu = Menu.SubMenu;\nvar Fab = styled.div(_templateObject());\n\nvar Chat = function Chat() {\n  var _useAppState = useAppState(),\n      _useAppState2 = _slicedToArray(_useAppState, 2),\n      state = _useAppState2[0],\n      dispatch = _useAppState2[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedIndex = _useState2[0],\n      setSelectedIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profile = _useState4[0],\n      setProfile = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      contacts = _useState6[0],\n      setContacts = _useState6[1];\n\n  var messageHeader = React.createElement(Menu, {\n    mode: \"horizontal\",\n    className: \"border-0\"\n  }, React.createElement(Menu.Item, {\n    key: \"read\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(CheckCircle, {\n    size: 20,\n    strokeWidth: 1\n  }))), React.createElement(Menu.Item, {\n    key: \"favorite\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(Heart, {\n    size: 20,\n    strokeWidth: 1\n  }))), React.createElement(Menu.Item, {\n    key: \"star\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(Star, {\n    size: 20,\n    strokeWidth: 1\n  }))), React.createElement(Menu.Item, {\n    key: \"refresh\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(RefreshCcw, {\n    size: 20,\n    strokeWidth: 1\n  }))));\n  var messageFooter = React.createElement(\"div\", {\n    className: \"py-3 px-3\"\n  }, React.createElement(Search, {\n    placeholder: \"Search contact\"\n  }));\n  var messagesSidebar = React.createElement(List, {\n    className: \"scroll-y flex-1 bg-transparent\",\n    itemLayout: \"horizontal\",\n    dataSource: MockContacts,\n    renderItem: function renderItem(item, index) {\n      return React.createElement(List.Item, {\n        onClick: function onClick() {\n          return setSelectedIndex(index);\n        },\n        style: {\n          backgroundColor: selectedIndex === index ? '#e6f7ff' : ''\n        },\n        className: \"\".concat(selectedIndex === index ? '' : 'border-0', \" border-0 px-4 py-3\")\n      }, React.createElement(List.Item.Meta, {\n        avatar: item.avatar,\n        title: React.createElement(\"small\", {\n          css: \"\\n                  display: flex;\\n                  width: 100%;\\n                \"\n        }, React.createElement(\"span\", {\n          className: \"\".concat(selectedIndex === index ? 'ant-menu-item-selected' : '', \" \")\n        }, item.name)),\n        description: React.createElement(\"span\", null, item.status)\n      }));\n    }\n  });\n  return React.createElement(Layout, {\n    className: \"fill-workspace rounded shadow-sm overflow-hidden\"\n  }, React.createElement(Header, {\n    css: \"\\n          display: flex;\\n          align-items: center;\\n          padding: 0.3rem 2rem;\\n          z-index: 1;\\n          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.02), 0 1px 0 rgba(0, 0, 0, 0.02);\\n          height: auto;\\n          line-height: auto;\\n        \"\n  }, state.mobile && React.createElement(Button, {\n    shape: \"circle\",\n    size: \"large\",\n    onClick: function onClick() {\n      return setContacts(true);\n    },\n    className: \"mr-3\"\n  }, React.createElement(MessageCircle, {\n    size: 20,\n    strokeWidth: 1\n  })), React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\"\n  }, React.createElement(Avatar, {\n    shape: \"circle\",\n    size: 40,\n    src: \"/static/images/avatar.jpg\"\n  }), !state.mobile && React.createElement(\"span\", {\n    className: \"ml-3\",\n    css: \"\\n                line-height: 1;\\n              \"\n  }, React.createElement(\"span\", {\n    css: \"\\n                  display: block;\\n                \"\n  }, \"John Doe\"), React.createElement(\"small\", {\n    className: \"text-muted\"\n  }, React.createElement(\"span\", null, \"Online\")))), React.createElement(\"span\", {\n    className: \"mr-auto\"\n  }), React.createElement(Menu, {\n    mode: \"horizontal\",\n    className: \"border-0\"\n  }, React.createElement(Menu.Item, null, React.createElement(SearchIcon, {\n    size: 20,\n    strokeWidth: 1\n  })), React.createElement(Menu.Item, null, React.createElement(Settings, {\n    size: 20,\n    strokeWidth: 1\n  })))), React.createElement(Layout, null, !state.mobile && React.createElement(Sider, {\n    width: 260\n  }, React.createElement(\"div\", {\n    css: \"\\n                display: flex;\\n                flex: 1;\\n                flex-direction: column;\\n                height: 100%;\\n                border-right: 1px solid rgba(0, 0, 0, 0.05);\\n              \"\n  }, messageHeader, messagesSidebar, messageFooter)), React.createElement(Drawer, {\n    title: messageHeader,\n    closable: false,\n    width: 240,\n    placement: \"left\",\n    onClose: function onClose() {\n      return setContacts(false);\n    },\n    visible: contacts,\n    className: \"chat-drawer\"\n  }, React.createElement(\"div\", {\n    css: \"\\n              display: flex;\\n              flex: 1;\\n              flex-direction: column;\\n              height: 100%;\\n              overflow: hidden;\\n            \"\n  }, messagesSidebar, messageFooter)), React.createElement(Layout, null, React.createElement(\"div\", {\n    css: \"\\n              display: flex;\\n              flex: 1;\\n              flex-direction: column;\\n              height: 100%;\\n              overflow: hidden;\\n            \"\n  }, React.createElement(ChatStyled, null, React.createElement(React.Fragment, null, MockChats.map(function (chat, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"conversation\\n                        \".concat(chat.type === 'sent' ? 'conversation-sent' : 'conversation-received', \"\\n                      \")\n    }, React.createElement(\"div\", {\n      className: \"\\n                          body shadow-sm\\n                          \".concat(chat.type === 'sent' ? 'body-sent' : 'body-received text-body', \"\\n                        \")\n    }, React.createElement(\"p\", {\n      color: \"inherit\"\n    }, chat.message), React.createElement(\"p\", {\n      variant: \"caption\",\n      className: \"\\n                            date\\n                            \".concat(chat.type === 'sent' ? 'date-sent' : 'date-received', \"\\n                          \")\n    }, format(chat.date, 'hh:mm'))));\n  }))), React.createElement(\"div\", {\n    className: \"px-3 py-2\",\n    css: \"\\n                background: #f9f9f9;\\n              \"\n  }, React.createElement(\"div\", {\n    css: \"\\n                  display: flex;\\n                  align-items: center;\\n                \"\n  }, React.createElement(Menu, {\n    mode: \"horizontal\",\n    className: \"border-bottom-0 bg-transparent\"\n  }, React.createElement(Menu.Item, {\n    key: \"read\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(Image, {\n    size: 20,\n    strokeWidth: 1\n  }))), React.createElement(Menu.Item, {\n    key: \"favorite\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(Anchor, {\n    size: 20,\n    strokeWidth: 1\n  }))), React.createElement(Menu.Item, {\n    key: \"star\"\n  }, React.createElement(\"a\", {\n    href: \"javascript:;\"\n  }, React.createElement(Mic, {\n    size: 20,\n    strokeWidth: 1\n  })))), React.createElement(TextArea, {\n    placeholder: \"Type a message\",\n    autosize: true\n  })))))));\n};\n\nexport default Chat;","map":null,"metadata":{},"sourceType":"module"}