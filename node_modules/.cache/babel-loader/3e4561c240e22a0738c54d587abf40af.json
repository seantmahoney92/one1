{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport TaskItem from './TaskItem';\n\nvar InnerTaskList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InnerTaskList, _React$Component);\n\n  function InnerTaskList() {\n    _classCallCheck(this, InnerTaskList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InnerTaskList).apply(this, arguments));\n  }\n\n  _createClass(InnerTaskList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.tasks !== this.props.tasks) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.tasks.map(function (task, index) {\n        return React.createElement(Draggable, {\n          key: \"\".concat(index, \"-\").concat(task.title),\n          draggableId: \"\".concat(index, \"-\").concat(task.title),\n          index: index\n        }, function (dragProvided, dragSnapshot) {\n          return React.createElement(TaskItem, {\n            key: task.id,\n            task: task,\n            isDragging: dragSnapshot.isDragging,\n            provided: dragProvided\n          });\n        });\n      });\n    }\n  }]);\n\n  return InnerTaskList;\n}(React.Component);\n\nvar InnerList =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(InnerList, _React$Component2);\n\n  function InnerList() {\n    _classCallCheck(this, InnerList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InnerList).apply(this, arguments));\n  }\n\n  _createClass(InnerList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          tasks = _this$props.tasks,\n          dropProvided = _this$props.dropProvided;\n      return React.createElement(\"div\", {\n        ref: dropProvided.innerRef\n      }, React.createElement(InnerTaskList, {\n        tasks: tasks\n      }), dropProvided.placeholder);\n    }\n  }]);\n\n  return InnerList;\n}(React.Component);\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(TaskList, _React$Component3);\n\n  function TaskList() {\n    _classCallCheck(this, TaskList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskList).apply(this, arguments));\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          ignoreContainerClipping = _this$props2.ignoreContainerClipping,\n          isDropDisabled = _this$props2.isDropDisabled,\n          listId = _this$props2.listId,\n          tasks = _this$props2.tasks,\n          title = _this$props2.title;\n      return React.createElement(Droppable, {\n        droppableId: listId,\n        ignoreContainerClipping: ignoreContainerClipping,\n        isDropDisabled: isDropDisabled\n      }, function (dropProvided, dropSnapshot) {\n        return React.createElement(InnerList, {\n          tasks: tasks,\n          title: title,\n          dropProvided: dropProvided\n        });\n      });\n    }\n  }]);\n\n  return TaskList;\n}(React.Component);\n\n_defineProperty(TaskList, \"defaultProps\", {\n  listId: 'LIST'\n});\n\nexport default TaskList;","map":null,"metadata":{},"sourceType":"module"}