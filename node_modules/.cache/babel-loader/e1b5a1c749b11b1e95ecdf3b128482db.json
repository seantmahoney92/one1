{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Icon, Button, Input, AutoComplete } from 'antd';\nvar Option = AutoComplete.Option;\n\nfunction onSelect(value) {\n  console.log('onSelect', value);\n}\n\nfunction getRandomInt(max) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\n}\n\nfunction searchResult(query) {\n  return new Array(getRandomInt(5)).join('.').split('.').map(function (item, idx) {\n    return {\n      query: query,\n      category: \"\".concat(query).concat(idx),\n      count: getRandomInt(200, 100)\n    };\n  });\n}\n\nfunction renderOption(item) {\n  return React.createElement(Option, {\n    key: item.category,\n    text: item.category\n  }, item.query, \" \\u5728\", React.createElement(\"a\", {\n    href: \"https://s.taobao.com/search?q=\".concat(item.query),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, item.category), \"\\u533A\\u5757\\u4E2D\", React.createElement(\"span\", {\n    className: \"global-search-item-count\"\n  }, \"\\u7EA6 \", item.count, \" \\u4E2A\\u7ED3\\u679C\"));\n}\n\nvar Complete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Complete, _React$Component);\n\n  function Complete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Complete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Complete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      dataSource: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearch\", function (value) {\n      _this.setState({\n        dataSource: value ? searchResult(value) : []\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Complete, [{\n    key: \"render\",\n    value: function render() {\n      var dataSource = this.state.dataSource;\n      return React.createElement(\"div\", {\n        className: \"global-search-wrapper\",\n        style: {\n          width: 300\n        }\n      }, React.createElement(AutoComplete, {\n        className: \"global-search\",\n        size: \"large\",\n        style: {\n          width: '100%'\n        },\n        dataSource: dataSource.map(renderOption),\n        onSelect: onSelect,\n        onSearch: this.handleSearch,\n        placeholder: \"input here\",\n        optionLabelProp: \"text\"\n      }, React.createElement(Input, {\n        suffix: React.createElement(Button, {\n          className: \"search-btn\",\n          size: \"large\",\n          type: \"primary\"\n        }, React.createElement(Icon, {\n          type: \"search\"\n        }))\n      })));\n    }\n  }]);\n\n  return Complete;\n}(React.Component);\n\nexport default Complete;","map":null,"metadata":{},"sourceType":"module"}