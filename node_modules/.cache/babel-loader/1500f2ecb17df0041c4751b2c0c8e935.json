{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Table, Button } from 'antd';\nvar data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      filteredInfo: null,\n      sortedInfo: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (pagination, filters, sorter) {\n      console.log('Various parameters', pagination, filters, sorter);\n\n      _this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearFilters\", function () {\n      _this.setState({\n        filteredInfo: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAll\", function () {\n      _this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setAgeSort\", function () {\n      _this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sortedInfo = _this$state.sortedInfo,\n          filteredInfo = _this$state.filteredInfo;\n      sortedInfo = sortedInfo || {};\n      filteredInfo = filteredInfo || {};\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [{\n          text: 'Joe',\n          value: 'Joe'\n        }, {\n          text: 'Jim',\n          value: 'Jim'\n        }],\n        filteredValue: filteredInfo.name || null,\n        onFilter: function onFilter(value, record) {\n          return record.name.includes(value);\n        },\n        sorter: function sorter(a, b) {\n          return a.name.length - b.name.length;\n        },\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order\n      }, {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: function sorter(a, b) {\n          return a.age - b.age;\n        },\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\n      }, {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [{\n          text: 'London',\n          value: 'London'\n        }, {\n          text: 'New York',\n          value: 'New York'\n        }],\n        filteredValue: filteredInfo.address || null,\n        onFilter: function onFilter(value, record) {\n          return record.address.includes(value);\n        },\n        sorter: function sorter(a, b) {\n          return a.address.length - b.address.length;\n        },\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order\n      }];\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"table-operations\"\n      }, React.createElement(Button, {\n        onClick: this.setAgeSort\n      }, \"Sort age\"), React.createElement(Button, {\n        onClick: this.clearFilters\n      }, \"Clear filters\"), React.createElement(Button, {\n        onClick: this.clearAll\n      }, \"Clear filters and sorters\")), React.createElement(Table, {\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}