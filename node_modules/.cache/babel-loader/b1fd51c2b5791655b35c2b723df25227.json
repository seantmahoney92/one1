{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\nvar FormItem = Form.Item;\nvar MonthPicker = DatePicker.MonthPicker,\n    RangePicker = DatePicker.RangePicker;\n\nvar TimeRelatedForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TimeRelatedForm, _React$Component);\n\n  function TimeRelatedForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimeRelatedForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimeRelatedForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, fieldsValue) {\n        if (err) {\n          return;\n        } // Should format date value before submit.\n\n\n        var rangeValue = fieldsValue['range-picker'];\n        var rangeTimeValue = fieldsValue['range-time-picker'];\n\n        var values = _objectSpread({}, fieldsValue, {\n          'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n          'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n          'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n          'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n          'range-time-picker': [rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'), rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')],\n          'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')\n        });\n\n        console.log('Received values of form: ', values);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TimeRelatedForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var config = {\n        rules: [{\n          type: 'object',\n          required: true,\n          message: 'Please select time!'\n        }]\n      };\n      var rangeConfig = {\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select time!'\n        }]\n      };\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit\n      }, React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"DatePicker\"\n      }), getFieldDecorator('date-picker', config)(React.createElement(DatePicker, null))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"DatePicker[showTime]\"\n      }), getFieldDecorator('date-time-picker', config)(React.createElement(DatePicker, {\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\"\n      }))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"MonthPicker\"\n      }), getFieldDecorator('month-picker', config)(React.createElement(MonthPicker, null))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"RangePicker\"\n      }), getFieldDecorator('range-picker', rangeConfig)(React.createElement(RangePicker, null))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"RangePicker[showTime]\"\n      }), getFieldDecorator('range-time-picker', rangeConfig)(React.createElement(RangePicker, {\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\"\n      }))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"TimePicker\"\n      }), getFieldDecorator('time-picker', config)(React.createElement(TimePicker, null))), React.createElement(FormItem, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"Submit\")));\n    }\n  }]);\n\n  return TimeRelatedForm;\n}(React.Component);\n\nexport default Form.create()(TimeRelatedForm);","map":null,"metadata":{},"sourceType":"module"}