{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport D3FlareData from '../datasets/d3-flare-example.json';\nimport { EXTENDED_DISCRETE_COLOR_RANGE } from 'react-vis/dist/theme';\nimport { LabelSeries } from 'react-vis';\nimport Sunburst from 'react-vis/dist/sunburst';\nvar LABEL_STYLE = {\n  fontSize: '8px',\n  textAnchor: 'middle'\n};\n/**\n * Recursively work backwards from highlighted node to find path of valud nodes\n * @param {Object} node - the current node being considered\n * @returns {Array} an array of strings describing the key route to the current node\n */\n\nfunction getKeyPath(node) {\n  if (!node.parent) {\n    return ['root'];\n  }\n\n  return [node.data && node.data.name || node.name].concat(getKeyPath(node.parent));\n}\n/**\n * Recursively modify data depending on whether or not each cell has been selected by the hover/highlight\n * @param {Object} data - the current node being considered\n * @param {Object|Boolean} keyPath - a map of keys that are in the highlight path\n * if this is false then all nodes are marked as selected\n * @returns {Object} Updated tree structure\n */\n\n\nfunction updateData(data, keyPath) {\n  if (data.children) {\n    data.children.map(function (child) {\n      return updateData(child, keyPath);\n    });\n  } // add a fill to all the uncolored cells\n\n\n  if (!data.hex) {\n    data.style = {\n      fill: EXTENDED_DISCRETE_COLOR_RANGE[5]\n    };\n  }\n\n  data.style = _objectSpread({}, data.style, {\n    fillOpacity: keyPath && !keyPath[data.name] ? 0.2 : 1\n  });\n  return data;\n}\n\nvar decoratedData = updateData(D3FlareData, false);\n\nvar BasicSunburst =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasicSunburst, _React$Component);\n\n  function BasicSunburst() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BasicSunburst);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BasicSunburst)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pathValue: false,\n      data: decoratedData,\n      finalValue: 'SUNBURST',\n      clicked: false\n    });\n\n    return _this;\n  }\n\n  _createClass(BasicSunburst, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          clicked = _this$state.clicked,\n          data = _this$state.data,\n          finalValue = _this$state.finalValue,\n          pathValue = _this$state.pathValue;\n      return React.createElement(\"div\", {\n        className: \"basic-sunburst-example-wrapper\"\n      }, React.createElement(\"div\", null, clicked ? 'click to unlock selection' : 'click to lock selection'), React.createElement(Sunburst, {\n        animation: true,\n        className: \"basic-sunburst-example m-auto\",\n        hideRootNode: true,\n        onValueMouseOver: function onValueMouseOver(node) {\n          if (clicked) {\n            return;\n          }\n\n          var path = getKeyPath(node).reverse();\n          var pathAsMap = path.reduce(function (res, row) {\n            res[row] = true;\n            return res;\n          }, {});\n\n          _this2.setState({\n            finalValue: path[path.length - 1],\n            pathValue: path.join(' > '),\n            data: updateData(decoratedData, pathAsMap)\n          });\n        },\n        onValueMouseOut: function onValueMouseOut() {\n          return clicked ? function () {} : _this2.setState({\n            pathValue: false,\n            finalValue: false,\n            data: updateData(decoratedData, false)\n          });\n        },\n        onValueClick: function onValueClick() {\n          return _this2.setState({\n            clicked: !clicked\n          });\n        },\n        style: {\n          stroke: '#ddd',\n          strokeOpacity: 0.3,\n          strokeWidth: '0.5'\n        },\n        colorType: \"literal\",\n        getSize: function getSize(d) {\n          return d.value;\n        },\n        getColor: function getColor(d) {\n          return d.hex;\n        },\n        data: data,\n        height: 300,\n        width: 350\n      }, finalValue && React.createElement(LabelSeries, {\n        data: [{\n          x: 0,\n          y: 0,\n          label: finalValue,\n          style: LABEL_STYLE\n        }]\n      })), React.createElement(\"div\", {\n        className: \"basic-sunburst-example-path-name\"\n      }, pathValue));\n    }\n  }]);\n\n  return BasicSunburst;\n}(React.Component);\n\nexport { BasicSunburst as default };","map":null,"metadata":{},"sourceType":"module"}