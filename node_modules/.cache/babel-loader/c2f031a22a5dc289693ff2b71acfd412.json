{"ast":null,"code":"import React from \"react\";\nimport { Row } from 'antd';\nimport { mapSection } from '../showcase-components/showcase-utils';\nimport { showCase } from '../index';\nvar AxisOn0 = showCase.AxisOn0,\n    AxisWithTurnedLabels = showCase.AxisWithTurnedLabels,\n    CustomAxes = showCase.CustomAxes,\n    CustomAxisChart = showCase.CustomAxisChart,\n    CustomAxesOrientation = showCase.CustomAxesOrientation,\n    CustomAxisTickFormat = showCase.CustomAxisTickFormat,\n    CustomAxisTickElement = showCase.CustomAxisTickElement,\n    DecorativeAxisCrissCross = showCase.DecorativeAxisCrissCross,\n    DynamicComplexEdgeHints = showCase.DynamicComplexEdgeHints,\n    DynamicCrosshair = showCase.DynamicCrosshair,\n    DynamicCrosshairScatterplot = showCase.DynamicCrosshairScatterplot,\n    DynamicHints = showCase.DynamicHints,\n    DynamicProgrammaticRightEdgeHints = showCase.DynamicProgrammaticRightEdgeHints,\n    DynamicSimpleEdgeHints = showCase.DynamicSimpleEdgeHints,\n    DynamicSimpleTopEdgeHints = showCase.DynamicSimpleTopEdgeHints,\n    PaddedAxis = showCase.PaddedAxis,\n    ParallelCoordinatesExample = showCase.ParallelCoordinatesExample,\n    StaticCrosshair = showCase.StaticCrosshair,\n    StaticHints = showCase.StaticHints;\n/* eslint-disable max-len */\n\nvar AXES = [{\n  name: 'Axis on 0',\n  component: AxisOn0,\n  componentName: 'AxisOn0'\n}, {\n  name: 'Custom Axes Orientation',\n  component: CustomAxesOrientation,\n  componentName: 'CustomAxesOrientation'\n}, {\n  name: 'Custom Axis',\n  component: CustomAxisChart,\n  componentName: 'CustomAxisChart'\n}, {\n  name: 'Custom axis tick format',\n  component: CustomAxisTickFormat\n}, {\n  name: 'Custom axis tick label element',\n  component: CustomAxisTickElement\n}, {\n  name: 'Even more Custom Axes',\n  component: CustomAxes,\n  componentName: 'CustomAxes'\n}, {\n  name: 'Turned axis labels',\n  component: AxisWithTurnedLabels,\n  componentName: 'AxisWithTurnedLabels'\n}, {\n  name: 'Unpadded Axis vs Padded Axis',\n  component: PaddedAxis,\n  componentName: 'PaddedAxis'\n}];\nvar TOOLTIPS = [{\n  name: 'Static Hints',\n  component: StaticHints,\n  componentName: 'StaticHints'\n}, {\n  name: 'Dynamic Hints',\n  comment: 'Move mouse over the point to see the hint.',\n  component: DynamicHints,\n  componentName: 'DynamicHints'\n}, {\n  name: 'Dynamic Simple Edge Hints',\n  comment: 'Mouse over point. Hint appears on different edges. Left margin enables first point to show w/o break.',\n  component: DynamicSimpleEdgeHints,\n  componentName: 'DynamicSimpleEdgeHints'\n}, {\n  name: 'Dynamic Simple Top Edge Hints',\n  comment: 'Mouse over point. horizontalAlign=ALIGN.AUTO, verticalAlign=ALIGN.TOP_EDGE  Hint pinned to top edge, pole moves along edge, hint box on right of pole for first 2 data points and left otherwise.',\n  component: DynamicSimpleTopEdgeHints,\n  componentName: 'DynamicSimpleTopEdgeHints'\n}, {\n  name: 'Dynamic Programmatic Right Edge Hints',\n  comment: 'Mouse over point. getAlignStyle method returns style object with right and top CSS props set (pinned right edge and at y position)',\n  component: DynamicProgrammaticRightEdgeHints,\n  componentName: 'DynamicProgrammaticRightEdgeHints'\n}, {\n  name: 'Dynamic Complex Edge Hints',\n  comment: 'Mouse over point. Hint uses flex, css to show hint and pole from point to outside plot edge (css for margin values).',\n  component: DynamicComplexEdgeHints,\n  componentName: 'DynamicComplexEdgeHints'\n}, {\n  name: 'Static Crosshair',\n  component: StaticCrosshair,\n  componentName: 'StaticCrosshair'\n}, {\n  name: 'Dynamic Crosshair',\n  comment: 'Move your mouse over the chart to see the point.',\n  component: DynamicCrosshair,\n  componentName: 'DynamicCrosshair'\n}, {\n  name: 'Dynamic Crosshair Scatterplot',\n  comment: 'Move your mouse over the chart to see the point.',\n  component: DynamicCrosshairScatterplot,\n  componentName: 'DynamicCrosshairScatterplot'\n}];\n/* eslint-enable max-len */\n\nvar DECORATIVE_AXES = [{\n  name: 'Diagonal Axes',\n  component: DecorativeAxisCrissCross,\n  componentName: 'DecorativeAxisCrissCross'\n}, {\n  name: 'Parallel Coordinates',\n  component: ParallelCoordinatesExample,\n  componentName: 'ParallelCoordinatesExample'\n}];\n\nfunction AxesShowcase(props) {\n  return React.createElement(\"article\", {\n    id: \"axes\"\n  }, React.createElement(Row, {\n    type: \"flex\",\n    align: \"top\",\n    gutter: 16\n  }, AXES.map(mapSection), TOOLTIPS.map(mapSection), DECORATIVE_AXES.map(mapSection)));\n}\n\nexport default AxesShowcase;","map":null,"metadata":{},"sourceType":"module"}