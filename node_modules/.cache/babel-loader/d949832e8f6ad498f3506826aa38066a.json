{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nimport { Cascader, Col, DatePicker, Form, Input, InputNumber, Select, TimePicker } from 'antd';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 5\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 12\n    }\n  }\n};\n\nvar Component = function Component() {\n  return React.createElement(Form, null, React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Fail\",\n    validateStatus: \"error\",\n    help: \"Should be combination of numbers & alphabets\"\n  }), React.createElement(Input, {\n    placeholder: \"unavailable choice\",\n    id: \"error\"\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Warning\",\n    validateStatus: \"warning\"\n  }), React.createElement(Input, {\n    placeholder: \"Warning\",\n    id: \"warning\"\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Validating\",\n    hasFeedback: true,\n    validateStatus: \"validating\",\n    help: \"The information is being validated...\"\n  }), React.createElement(Input, {\n    placeholder: \"I'm the content is being validated\",\n    id: \"validating\"\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Success\",\n    hasFeedback: true,\n    validateStatus: \"success\"\n  }), React.createElement(Input, {\n    placeholder: \"I'm the content\",\n    id: \"success\"\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Warning\",\n    hasFeedback: true,\n    validateStatus: \"warning\"\n  }), React.createElement(Input, {\n    placeholder: \"Warning\",\n    id: \"warning\"\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Fail\",\n    hasFeedback: true,\n    validateStatus: \"error\",\n    help: \"Should be combination of numbers & alphabets\"\n  }), React.createElement(Input, {\n    placeholder: \"unavailable choice\",\n    id: \"error\"\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Success\",\n    hasFeedback: true,\n    validateStatus: \"success\"\n  }), React.createElement(DatePicker, {\n    style: {\n      width: '100%'\n    }\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Warning\",\n    hasFeedback: true,\n    validateStatus: \"warning\"\n  }), React.createElement(TimePicker, {\n    style: {\n      width: '100%'\n    }\n  })), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Error\",\n    hasFeedback: true,\n    validateStatus: \"error\"\n  }), React.createElement(Select, {\n    defaultValue: \"1\"\n  }, React.createElement(Option, {\n    value: \"1\"\n  }, \"Option 1\"), React.createElement(Option, {\n    value: \"2\"\n  }, \"Option 2\"), React.createElement(Option, {\n    value: \"3\"\n  }, \"Option 3\"))), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Validating\",\n    hasFeedback: true,\n    validateStatus: \"validating\",\n    help: \"The information is being validated...\"\n  }), React.createElement(Cascader, {\n    defaultValue: ['1'],\n    options: []\n  })), React.createElement(FormItem, _extends({\n    label: \"inline\"\n  }, formItemLayout), React.createElement(Col, {\n    span: 11\n  }, React.createElement(FormItem, {\n    validateStatus: \"error\",\n    help: \"Please select the correct date\"\n  }, React.createElement(DatePicker, null))), React.createElement(Col, {\n    span: 2\n  }, React.createElement(\"span\", {\n    style: {\n      display: 'inline-block',\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"-\")), React.createElement(Col, {\n    span: 11\n  }, React.createElement(FormItem, null, React.createElement(DatePicker, null)))), React.createElement(FormItem, _extends({}, formItemLayout, {\n    label: \"Success\",\n    hasFeedback: true,\n    validateStatus: \"success\"\n  }), React.createElement(InputNumber, {\n    style: {\n      width: '100%'\n    }\n  })));\n};\n\nexport default Component;","map":null,"metadata":{},"sourceType":"module"}