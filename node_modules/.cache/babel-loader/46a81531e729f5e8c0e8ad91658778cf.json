{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Popconfirm, Switch, message } from 'antd';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: false,\n      condition: true // Whether meet the condition, if not show popconfirm.\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeCondition\", function (value) {\n      _this.setState({\n        condition: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirm\", function () {\n      _this.setState({\n        visible: false\n      });\n\n      message.success('Next step.');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cancel\", function () {\n      _this.setState({\n        visible: false\n      });\n\n      message.error('Click on cancel.');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleVisibleChange\", function (visible) {\n      if (!visible) {\n        _this.setState({\n          visible: visible\n        });\n\n        return;\n      } // Determining condition before show the popconfirm.\n\n\n      console.log(_this.state.condition);\n\n      if (_this.state.condition) {\n        _this.confirm(); // next step\n\n      } else {\n        _this.setState({\n          visible: visible\n        }); // show the popconfirm\n\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Popconfirm, {\n        title: \"Are you sure delete this task?\",\n        visible: this.state.visible,\n        onVisibleChange: this.handleVisibleChange,\n        onConfirm: this.confirm,\n        onCancel: this.cancel,\n        okText: \"Yes\",\n        cancelText: \"No\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Delete a task\")), React.createElement(\"br\", null), React.createElement(\"br\", null), \"Whether directly execute\\uFF1A\", React.createElement(Switch, {\n        defaultChecked: true,\n        onChange: this.changeCondition\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}