{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Button, Col, DatePicker, Drawer, Form, Input, Row, Select } from 'antd';\nvar Option = Select.Option;\n\nvar DrawerForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DrawerForm, _React$Component);\n\n  function DrawerForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DrawerForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrawerForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      visible: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showDrawer\", function () {\n      _this.setState({\n        visible: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", function () {\n      _this.setState({\n        visible: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DrawerForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", null, React.createElement(Button, {\n        onClick: this.showDrawer\n      }, \"Create\"), React.createElement(Drawer, {\n        title: \"Create\",\n        width: 720,\n        placement: \"right\",\n        onClose: this.onClose,\n        maskClosable: false,\n        visible: this.state.visible,\n        style: {\n          height: 'calc(100% - 55px)',\n          overflow: 'auto',\n          paddingBottom: 53\n        }\n      }, React.createElement(Form, {\n        layout: \"vertical\",\n        hideRequiredMark: true\n      }, React.createElement(Row, {\n        gutter: 16\n      }, React.createElement(Col, {\n        span: 12\n      }, React.createElement(Form.Item, {\n        label: \"Name\"\n      }, getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'please enter user name'\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"please enter user name\"\n      })))), React.createElement(Col, {\n        span: 12\n      }, React.createElement(Form.Item, {\n        label: \"Url\"\n      }, getFieldDecorator('url', {\n        rules: [{\n          required: true,\n          message: 'please enter url'\n        }]\n      })(React.createElement(Input, {\n        style: {\n          width: '100%'\n        },\n        addonBefore: \"http://\",\n        addonAfter: \".com\",\n        placeholder: \"please enter url\"\n      }))))), React.createElement(Row, {\n        gutter: 16\n      }, React.createElement(Col, {\n        span: 12\n      }, React.createElement(Form.Item, {\n        label: \"Owner\"\n      }, getFieldDecorator('owner', {\n        rules: [{\n          required: true,\n          message: 'Please select an owner'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please select an owner\"\n      }, React.createElement(Option, {\n        value: \"xiao\"\n      }, \"Xiaoxiao Fu\"), React.createElement(Option, {\n        value: \"mao\"\n      }, \"Maomao Zhou\"))))), React.createElement(Col, {\n        span: 12\n      }, React.createElement(Form.Item, {\n        label: \"Type\"\n      }, getFieldDecorator('type', {\n        rules: [{\n          required: true,\n          message: 'Please choose the type'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please choose the type\"\n      }, React.createElement(Option, {\n        value: \"private\"\n      }, \"Private\"), React.createElement(Option, {\n        value: \"public\"\n      }, \"Public\")))))), React.createElement(Row, {\n        gutter: 16\n      }, React.createElement(Col, {\n        span: 12\n      }, React.createElement(Form.Item, {\n        label: \"Approver\"\n      }, getFieldDecorator('approver', {\n        rules: [{\n          required: true,\n          message: 'Please choose the approver'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please choose the approver\"\n      }, React.createElement(Option, {\n        value: \"jack\"\n      }, \"Jack Ma\"), React.createElement(Option, {\n        value: \"tom\"\n      }, \"Tom Liu\"))))), React.createElement(Col, {\n        span: 12\n      }, React.createElement(Form.Item, {\n        label: \"DateTime\"\n      }, getFieldDecorator('dateTime', {\n        rules: [{\n          required: true,\n          message: 'Please choose the dateTime'\n        }]\n      })(React.createElement(DatePicker.RangePicker, {\n        style: {\n          width: '100%'\n        },\n        getPopupContainer: function getPopupContainer(trigger) {\n          return trigger.parentNode;\n        }\n      }))))), React.createElement(Row, {\n        gutter: 16\n      }, React.createElement(Col, {\n        span: 24\n      }, React.createElement(Form.Item, {\n        label: \"Description\"\n      }, getFieldDecorator('description', {\n        rules: [{\n          required: true,\n          message: 'please enter url description'\n        }]\n      })(React.createElement(Input.TextArea, {\n        rows: 4,\n        placeholder: \"please enter url description\"\n      })))))), React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n          borderTop: '1px solid #e8e8e8',\n          padding: '10px 16px',\n          textAlign: 'right',\n          left: 0,\n          background: '#fff',\n          borderRadius: '0 0 4px 4px'\n        }\n      }, React.createElement(Button, {\n        style: {\n          marginRight: 8\n        },\n        onClick: this.onClose\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.onClose\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return DrawerForm;\n}(React.Component);\n\nexport default Form.create()(DrawerForm);","map":null,"metadata":{},"sourceType":"module"}