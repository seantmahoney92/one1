{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Icon, TreeSelect } from 'antd';\nvar TreeNode = TreeSelect.TreeNode;\nvar icon = React.createElement(Icon, {\n  type: \"smile\"\n});\n\nvar Demo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Demo, _React$Component);\n\n  function Demo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Demo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      console.log(value);\n\n      _this.setState({\n        value: value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TreeSelect, {\n        showSearch: true,\n        suffixIcon: icon,\n        style: {\n          width: 300\n        },\n        value: this.state.value,\n        dropdownStyle: {\n          maxHeight: 400,\n          overflow: 'auto'\n        },\n        placeholder: \"Please select\",\n        allowClear: true,\n        treeDefaultExpandAll: true,\n        onChange: this.onChange\n      }, React.createElement(TreeNode, {\n        value: \"parent 1\",\n        title: \"parent 1\",\n        key: \"0-1\"\n      }, React.createElement(TreeNode, {\n        value: \"parent 1-0\",\n        title: \"parent 1-0\",\n        key: \"0-1-1\"\n      }, React.createElement(TreeNode, {\n        value: \"leaf1\",\n        title: \"my leaf\",\n        key: \"random\"\n      }), React.createElement(TreeNode, {\n        value: \"leaf2\",\n        title: \"your leaf\",\n        key: \"random1\"\n      })), React.createElement(TreeNode, {\n        value: \"parent 1-1\",\n        title: \"parent 1-1\",\n        key: \"random2\"\n      }, React.createElement(TreeNode, {\n        value: \"sss\",\n        title: React.createElement(\"b\", {\n          style: {\n            color: '#08c'\n          }\n        }, \"sss\"),\n        key: \"random3\"\n      }))));\n    }\n  }]);\n\n  return Demo;\n}(React.Component);\n\nexport default Demo;","map":null,"metadata":{},"sourceType":"module"}