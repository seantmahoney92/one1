{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { FlexibleWidthXYPlot, HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, YAxis } from 'react-vis';\nexport default function AxisOn0(_ref) {\n  var _ref$xDomain = _ref.xDomain,\n      xDomain = _ref$xDomain === void 0 ? [-1, 3] : _ref$xDomain,\n      _ref$yDomain = _ref.yDomain,\n      yDomain = _ref$yDomain === void 0 ? [-5, 15] : _ref$yDomain,\n      _ref$xAxisOn = _ref.xAxisOn0,\n      xAxisOn0 = _ref$xAxisOn === void 0 ? true : _ref$xAxisOn,\n      _ref$yAxisOn = _ref.yAxisOn0,\n      yAxisOn0 = _ref$yAxisOn === void 0 ? true : _ref$yAxisOn,\n      _ref$verticalTickValu = _ref.verticalTickValues,\n      verticalTickValues = _ref$verticalTickValu === void 0 ? [] : _ref$verticalTickValu,\n      _ref$horizontalTickVa = _ref.horizontalTickValues,\n      horizontalTickValues = _ref$horizontalTickVa === void 0 ? [0] : _ref$horizontalTickVa;\n  return React.createElement(FlexibleWidthXYPlot, _extends({\n    height: 300\n  }, {\n    xDomain: xDomain,\n    yDomain: yDomain\n  }), !verticalTickValues || verticalTickValues.length ? React.createElement(VerticalGridLines, {\n    tickValues: verticalTickValues\n  }) : null, !horizontalTickValues || horizontalTickValues.length ? React.createElement(HorizontalGridLines, {\n    tickValues: horizontalTickValues\n  }) : null, React.createElement(XAxis, {\n    on0: xAxisOn0\n  }), React.createElement(YAxis, {\n    on0: yAxisOn0\n  }), React.createElement(LineSeries, {\n    color: \"#007bff\",\n    data: [{\n      x: -1,\n      y: 10\n    }, {\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }, {\n      x: 2,\n      y: -5\n    }, {\n      x: 3,\n      y: 15\n    }]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}