{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { FlexibleWidthXYPlot, GradientDefs, PolygonSeries, XAxis, YAxis } from 'react-vis';\n\nfunction buildTriangle(sideWidth, lowerLeftCoord) {\n  var x = lowerLeftCoord.x,\n      y = lowerLeftCoord.y;\n  var triangle = [[{\n    x: x,\n    y: y\n  }, {\n    x: x,\n    y: y + sideWidth\n  }, {\n    x: x + sideWidth,\n    y: y\n  }]];\n\n  if (sideWidth < 0.5) {\n    return triangle;\n  }\n\n  var newWidth = sideWidth * 0.5;\n  var a = buildTriangle(newWidth, lowerLeftCoord);\n  var b = buildTriangle(newWidth, {\n    x: x + sideWidth,\n    y: y\n  });\n  var c = buildTriangle(newWidth, {\n    x: x,\n    y: y + sideWidth\n  });\n  return triangle.concat(a).concat(b).concat(c);\n}\n\nvar triangles = buildTriangle(7, {\n  x: 0,\n  y: 0\n});\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hoveredIndex: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hoveredIndex = this.state.hoveredIndex;\n      return React.createElement(FlexibleWidthXYPlot, {\n        height: 300\n      }, React.createElement(GradientDefs, null, React.createElement(\"radialGradient\", {\n        id: \"grad1\",\n        cx: \"50%\",\n        cy: \"50%\",\n        r: \"50%\",\n        fx: \"50%\",\n        fy: \"50%\"\n      }, React.createElement(\"stop\", {\n        offset: \"0%\",\n        stopColor: \"#52c41a\",\n        stopOpacity: \"0\"\n      }), React.createElement(\"stop\", {\n        offset: \"100%\",\n        stopColor: \"#007bff\",\n        stopOpacity: \"1\"\n      }))), React.createElement(XAxis, null), React.createElement(YAxis, null), triangles.map(function (triangle, index) {\n        return React.createElement(PolygonSeries, {\n          key: \"triangle-\".concat(index),\n          data: triangle,\n          onSeriesMouseOver: function onSeriesMouseOver() {\n            return _this2.setState({\n              hoveredIndex: index\n            });\n          },\n          onSeriesMouseOut: function onSeriesMouseOut() {\n            return _this2.setState({\n              hoveredIndex: false\n            });\n          },\n          color: index !== hoveredIndex ? 'url(#grad1)' : null,\n          style: {\n            strokeWidth: 0.5,\n            strokeOpacity: 1,\n            opacity: 0.5,\n            fill: index === hoveredIndex ? '#f5222d' : null\n          }\n        });\n      }));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}