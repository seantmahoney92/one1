{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Input, Tooltip } from 'antd';\n\nfunction formatNumber(value) {\n  value += '';\n  var list = value.split('.');\n  var prefix = list[0].charAt(0) === '-' ? '-' : '';\n  var num = prefix ? list[0].slice(1) : list[0];\n  var result = '';\n\n  while (num.length > 3) {\n    result = \",\".concat(num.slice(-3)).concat(result);\n    num = num.slice(0, num.length - 3);\n  }\n\n  if (num) {\n    result = num + result;\n  }\n\n  return \"\".concat(prefix).concat(result).concat(list[1] ? \".\".concat(list[1]) : '');\n}\n\nvar NumericInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NumericInput, _React$Component);\n\n  function NumericInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NumericInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NumericInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var value = e.target.value;\n      var reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n\n      if (!isNaN(value) && reg.test(value) || value === '' || value === '-') {\n        _this.props.onChange(value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          onBlur = _this$props.onBlur,\n          onChange = _this$props.onChange;\n\n      if (value.charAt(value.length - 1) === '.' || value === '-') {\n        onChange({\n          value: value.slice(0, -1)\n        });\n      }\n\n      if (onBlur) {\n        onBlur();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(NumericInput, [{\n    key: \"render\",\n    value: function render() {\n      var value = this.props.value;\n      var title = value ? React.createElement(\"span\", {\n        className: \"numeric-input-title\"\n      }, value !== '-' ? formatNumber(value) : '-') : 'Input a number';\n      return React.createElement(Tooltip, {\n        trigger: ['focus'],\n        title: title,\n        placement: \"topLeft\",\n        overlayClassName: \"numeric-input\"\n      }, React.createElement(Input, _extends({}, this.props, {\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        placeholder: \"Input a number\",\n        maxLength: \"25\"\n      })));\n    }\n  }]);\n\n  return NumericInput;\n}(React.Component);\n\nvar NumericInputDemo =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(NumericInputDemo, _React$Component2);\n\n  function NumericInputDemo(props) {\n    var _this2;\n\n    _classCallCheck(this, NumericInputDemo);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(NumericInputDemo).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this2), \"onChange\", function (value) {\n      _this2.setState({\n        value: value\n      });\n    });\n\n    _this2.state = {\n      value: ''\n    };\n    return _this2;\n  }\n\n  _createClass(NumericInputDemo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NumericInput, {\n        style: {\n          width: 120\n        },\n        value: this.state.value,\n        onChange: this.onChange\n      });\n    }\n  }]);\n\n  return NumericInputDemo;\n}(React.Component);\n\nexport default NumericInputDemo;","map":null,"metadata":{},"sourceType":"module"}