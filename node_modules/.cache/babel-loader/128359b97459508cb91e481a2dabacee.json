{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { dataLayer, defaultMapStyle } from '../demos/map-gl/map-style.js';\nimport { Component } from 'react';\nimport MapGL from 'react-map-gl';\nimport { fromJS } from 'immutable';\nimport { updatePercentiles } from '../demos/map-gl/utils';\n\nvar GeoJson =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GeoJson, _Component);\n\n  function GeoJson() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GeoJson);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GeoJson)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      mapStyle: defaultMapStyle,\n      year: 2015,\n      data: null,\n      hoveredFeature: null,\n      viewport: {\n        latitude: 40,\n        longitude: -100,\n        zoom: 3,\n        bearing: 0,\n        pitch: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_loadData\", function (data) {\n      updatePercentiles(data, function (f) {\n        return f.properties.income[_this.state.year];\n      });\n      var mapStyle = defaultMapStyle.setIn(['sources', 'incomeByState'], fromJS({\n        type: 'geojson',\n        data: data\n      })).set('layers', defaultMapStyle.get('layers').push(dataLayer));\n\n      _this.setState({\n        data: data,\n        mapStyle: mapStyle\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onViewportChange\", function (viewport) {\n      return _this.setState({\n        viewport: viewport\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onHover\", function (event) {\n      var features = event.features,\n          _event$srcEvent = event.srcEvent,\n          offsetX = _event$srcEvent.offsetX,\n          offsetY = _event$srcEvent.offsetY;\n      var hoveredFeature = features && features.find(function (f) {\n        return f.layer.id === 'data';\n      });\n\n      _this.setState({\n        hoveredFeature: hoveredFeature,\n        x: offsetX,\n        y: offsetY\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(GeoJson, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var requestJson = require('d3-fetch').json;\n\n      requestJson('/static/us-income.geojson').then(function (response) {\n        if (response) _this2._loadData(response);\n      });\n    }\n  }, {\n    key: \"_renderTooltip\",\n    value: function _renderTooltip() {\n      var _this$state = this.state,\n          hoveredFeature = _this$state.hoveredFeature,\n          year = _this$state.year,\n          x = _this$state.x,\n          y = _this$state.y;\n      return hoveredFeature && React.createElement(\"div\", {\n        className: \"tooltip\",\n        css: \" left: \".concat(x, \", top: \").concat(y, \" \")\n      }, React.createElement(\"div\", null, \"State: \", hoveredFeature.properties.name), React.createElement(\"div\", null, \"Median Household Income: \", hoveredFeature.properties.value), React.createElement(\"div\", null, \"Percentile: \", hoveredFeature.properties.percentile / 8 * 100));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          viewport = _this$state2.viewport,\n          mapStyle = _this$state2.mapStyle;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"full-workspace\"\n      }, React.createElement(MapGL, _extends({}, viewport, {\n        width: \"100%\",\n        height: \"100%\",\n        mapStyle: mapStyle,\n        onViewportChange: this._onViewportChange,\n        mapboxApiAccessToken: process.env.mapBoxApi,\n        onHover: this._onHover\n      }), this._renderTooltip())));\n    }\n  }]);\n\n  return GeoJson;\n}(Component);\n\nexport default GeoJson;","map":null,"metadata":{},"sourceType":"module"}