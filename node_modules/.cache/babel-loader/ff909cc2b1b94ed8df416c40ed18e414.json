{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { FlexibleWidthXYPlot, Hint, HorizontalGridLines, MarkSeries, MarkSeriesCanvas, VerticalGridLines, XAxis, YAxis } from 'react-vis';\nimport NoSSR from 'react-no-ssr';\n\nfunction getRandomData() {\n  return new Array(100).fill(0).map(function (row) {\n    return {\n      x: Math.random() * 10,\n      y: Math.random() * 20,\n      size: Math.random() * 10,\n      color: Math.random() * 10,\n      opacity: Math.random() * 0.5 + 0.5\n    };\n  });\n}\n\nvar colorRanges = {\n  typeA: ['#59E4EC', '#0D676C'],\n  typeB: ['#EFC1E3', '#B52F93']\n};\nvar randomData = getRandomData();\nvar nextType = {\n  typeA: 'typeB',\n  typeB: 'typeA'\n};\nvar nextModeContent = {\n  canvas: 'SWITCH TO SVG',\n  svg: 'SWITCH TO CANVAS'\n};\nvar drawModes = ['canvas', 'svg'];\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      drawMode: 0,\n      data: randomData,\n      colorType: 'typeA',\n      value: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          drawMode = _this$state.drawMode,\n          data = _this$state.data,\n          colorType = _this$state.colorType;\n      var markSeriesProps = {\n        animation: true,\n        className: 'mark-series-example',\n        sizeRange: [5, 15],\n        seriesId: 'my-example-scatterplot',\n        colorRange: colorRanges[colorType],\n        opacityType: 'literal',\n        data: data,\n        onNearestXY: function onNearestXY(value) {\n          return _this2.setState({\n            value: value\n          });\n        }\n      };\n      var mode = drawModes[drawMode];\n      return React.createElement(\"div\", {\n        className: \"canvas-wrapper\"\n      }, React.createElement(NoSSR, null, React.createElement(FlexibleWidthXYPlot, {\n        onMouseLeave: function onMouseLeave() {\n          return _this2.setState({\n            value: false\n          });\n        },\n        height: 300,\n        color: \"#007bff\"\n      }, React.createElement(VerticalGridLines, {\n        style: {\n          strokeWidth: 0.5\n        }\n      }), React.createElement(HorizontalGridLines, {\n        style: {\n          strokeWidth: 0.5\n        }\n      }), React.createElement(XAxis, {\n        style: {\n          strokeWidth: 0.5\n        }\n      }), React.createElement(YAxis, {\n        style: {\n          strokeWidth: 0.5\n        }\n      }), mode === 'canvas' && React.createElement(MarkSeriesCanvas, markSeriesProps), mode === 'svg' && React.createElement(MarkSeries, markSeriesProps), this.state.value ? React.createElement(Hint, {\n        value: this.state.value\n      }) : null)));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}