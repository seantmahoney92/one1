{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/one1/components/shared/WeatherCard.js\";\nimport React from \"react\";\nimport { ArrowDown, ArrowDownLeft, ArrowDownRight, ArrowLeft, ArrowRight, ArrowUp, ArrowUpLeft, ArrowUpRight } from 'react-feather';\nimport { Card, Col, Divider, Row, Skeleton } from 'antd';\nimport { capitalize, getWeather, getWeatherIcon, windDirection } from '../../lib/helpers';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nvar DescriptionItem = function DescriptionItem(_ref) {\n  var title = _ref.title,\n      content = _ref.content;\n  return React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"space-between\",\n    className: \"mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, title), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, content));\n};\n\nvar ForecastItem = function ForecastItem(_ref2) {\n  var content = _ref2.content;\n  return React.createElement(\"span\", {\n    css: \"\\n      display: block;\\n    \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, content);\n};\n\nvar getWindDirection = function getWindDirection(degree) {\n  var direction = windDirection(degree);\n\n  switch (direction) {\n    case 'n':\n      return React.createElement(ArrowUp, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n\n    case 'ne':\n      return React.createElement(ArrowUpRight, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n\n    case 'e':\n      return React.createElement(ArrowRight, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n\n    case 'se':\n      return React.createElement(ArrowDownRight, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n\n    case 's':\n      return React.createElement(ArrowDown, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n\n    case 'sw':\n      return React.createElement(ArrowDownLeft, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n\n    case 'w':\n      return React.createElement(ArrowLeft, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n\n    case 'nw':\n      return React.createElement(ArrowUpLeft, {\n        size: 20,\n        strokeWidth: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n\n    default:\n      break;\n  }\n};\n\nvar WeatherCard = function WeatherCard(_ref3) {\n  var city = _ref3.city,\n      country = _ref3.country,\n      days = _ref3.days;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      forecast = _useState4[0],\n      setForecast = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _forecast, _current;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeather(city, country, days);\n\n            case 3:\n              _forecast = _context.sent;\n\n              if (_forecast) {\n                _current = _forecast.list[0];\n                setCurrent(_current);\n                setForecast(_forecast);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }))();\n  }, [city, country, days]);\n  return React.createElement(Card, {\n    bodyStyle: {\n      padding: 0\n    },\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Skeleton, {\n    loading: !current && !forecast,\n    active: true,\n    className: \"p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, current && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"space-between\",\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, forecast && React.createElement(\"h5\", {\n    className: \"mb-0 font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\".concat(forecast.city.name, \", \").concat(forecast.city.country)), React.createElement(\"h6\", {\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, format(current.dt * 1000, 'MMMM Do YYYY')), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, capitalize(current.weather[0].description))), React.createElement(Col, {\n    className: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"font-weight-light mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, current.main.temp, \"\\xB0\")))), React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"space-between\",\n    gutter: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, _Object$keys(current.main).map(function (key, index) {\n    return React.createElement(Col, {\n      xs: 12,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(DescriptionItem, {\n      title: capitalize(key.replace(/_/g, ' ')),\n      content: current.main[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }))), React.createElement(Divider, {\n    orientation: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Forecast\")), React.createElement(\"div\", {\n    className: \"p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, forecast && React.createElement(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"space-between\",\n    className: \"text-center\",\n    style: {\n      flexFlow: 'initial'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, forecast.list.map(function (day, index) {\n    return index !== 0 && React.createElement(\"p\", {\n      className: \"text-center mb-0\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ForecastItem, {\n      content: format(day.dt * 1000, 'ddd'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(ForecastItem, {\n      content: day.weather.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(ForecastItem, {\n      content: getWindDirection(day.wind.deg),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(ForecastItem, {\n      content: getWeatherIcon(day.weather[0].icon, 50),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(ForecastItem, {\n      content: \"\".concat(day.main.temp, \"\\xB0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }));\n  }))))));\n};\n\nWeatherCard.propTypes = {\n  city: PropTypes.string,\n  country: PropTypes.string,\n  days: PropTypes.number\n};\nexport default WeatherCard;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/one1/components/shared/WeatherCard.js"],"names":["ArrowDown","ArrowDownLeft","ArrowDownRight","ArrowLeft","ArrowRight","ArrowUp","ArrowUpLeft","ArrowUpRight","Card","Col","Divider","Row","Skeleton","capitalize","getWeather","getWeatherIcon","windDirection","useEffect","useState","PropTypes","format","DescriptionItem","title","content","ForecastItem","getWindDirection","degree","direction","WeatherCard","city","country","days","undefined","current","setCurrent","forecast","setForecast","list","console","error","padding","name","dt","weather","description","main","temp","map","key","index","replace","flexFlow","day","wind","deg","icon","propTypes","string","number"],"mappings":"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","sourcesContent":["import {\n  ArrowDown,\n  ArrowDownLeft,\n  ArrowDownRight,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n  ArrowUpLeft,\n  ArrowUpRight\n} from 'react-feather';\nimport { Card, Col, Divider, Row, Skeleton } from 'antd';\nimport {\n  capitalize,\n  getWeather,\n  getWeatherIcon,\n  windDirection\n} from '../../lib/helpers';\nimport { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nconst DescriptionItem = ({ title, content }) => (\n  <Row type=\"flex\" align=\"middle\" justify=\"space-between\" className=\"mb-2\">\n    <span>{title}</span>\n    <small>{content}</small>\n  </Row>\n);\n\nconst ForecastItem = ({ content }) => (\n  <span\n    css={`\n      display: block;\n    `}\n  >\n    {content}\n  </span>\n);\n\nconst getWindDirection = degree => {\n  const direction = windDirection(degree);\n  switch (direction) {\n    case 'n':\n      return <ArrowUp size={20} strokeWidth={1} />;\n    case 'ne':\n      return <ArrowUpRight size={20} strokeWidth={1} />;\n    case 'e':\n      return <ArrowRight size={20} strokeWidth={1} />;\n    case 'se':\n      return <ArrowDownRight size={20} strokeWidth={1} />;\n    case 's':\n      return <ArrowDown size={20} strokeWidth={1} />;\n    case 'sw':\n      return <ArrowDownLeft size={20} strokeWidth={1} />;\n    case 'w':\n      return <ArrowLeft size={20} strokeWidth={1} />;\n    case 'nw':\n      return <ArrowUpLeft size={20} strokeWidth={1} />;\n    default:\n      break;\n  }\n};\n\nconst WeatherCard = ({ city, country, days }) => {\n  const [current, setCurrent] = useState(undefined);\n  const [forecast, setForecast] = useState(undefined);\n\n  useEffect(() => {\n    (async function() {\n      try {\n        const forecast = await getWeather(city, country, days);\n\n        if (forecast) {\n          const current = forecast.list[0];\n          setCurrent(current);\n          setForecast(forecast);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [city, country, days]);\n\n  return (\n    <Card bodyStyle={{ padding: 0 }} className=\"mb-4\">\n      <Skeleton loading={!current && !forecast} active className=\"p-4\">\n        {current && (\n          <>\n            <div className=\"p-4\">\n              <Row\n                type=\"flex\"\n                align=\"middle\"\n                justify=\"space-between\"\n                className=\"mb-4\"\n              >\n                <Col>\n                  {forecast && (\n                    <h5 className=\"mb-0 font-weight-bold\">{`${\n                      forecast.city.name\n                    }, ${forecast.city.country}`}</h5>\n                  )}\n                  <h6 className=\"mb-0\">\n                    {format(current.dt * 1000, 'MMMM Do YYYY')}\n                  </h6>\n                  <small>{capitalize(current.weather[0].description)}</small>\n                </Col>\n                <Col className=\"text-right\">\n                  <h3 className=\"font-weight-light mb-0\">\n                    <span>{current.main.temp}&deg;</span>\n                  </h3>\n                </Col>\n              </Row>\n              <Row\n                type=\"flex\"\n                align=\"middle\"\n                justify=\"space-between\"\n                gutter={16}\n              >\n                {Object.keys(current.main).map((key, index) => (\n                  <Col xs={12} key={index}>\n                    <DescriptionItem\n                      title={capitalize(key.replace(/_/g, ' '))}\n                      content={current.main[key]}\n                    />\n                  </Col>\n                ))}\n              </Row>\n            </div>\n            <Divider orientation=\"left\">\n              <small>Forecast</small>\n            </Divider>\n            <div className=\"p-4\">\n              {forecast && (\n                <Row\n                  type=\"flex\"\n                  align=\"middle\"\n                  justify=\"space-between\"\n                  className=\"text-center\"\n                  style={{ flexFlow: 'initial' }}\n                >\n                  {forecast.list.map(\n                    (day, index) =>\n                      index !== 0 && (\n                        <p className=\"text-center mb-0\" key={index}>\n                          <ForecastItem\n                            content={format(day.dt * 1000, 'ddd')}\n                          />\n                          <ForecastItem content={day.weather.description} />\n                          <ForecastItem\n                            content={getWindDirection(day.wind.deg)}\n                          />\n                          <ForecastItem\n                            content={getWeatherIcon(day.weather[0].icon, 50)}\n                          />\n                          <ForecastItem content={`${day.main.temp}°`} />\n                        </p>\n                      )\n                  )}\n                </Row>\n              )}\n            </div>\n          </>\n        )}\n      </Skeleton>\n    </Card>\n  );\n};\n\nWeatherCard.propTypes = {\n  city: PropTypes.string,\n  country: PropTypes.string,\n  days: PropTypes.number\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}