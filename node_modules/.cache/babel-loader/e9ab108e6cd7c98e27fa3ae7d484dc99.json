{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport CircularGridLines from 'react-vis/dist/plot/circular-grid-lines';\nimport { Component } from 'react';\nimport RadarChart from 'react-vis/dist/radar-chart';\nimport { RefreshCcw } from 'react-feather';\nimport ShowcaseButton from '../showcase-components/showcase-button';\nvar DATA = [{\n  explosions: 7,\n  wow: 10,\n  dog: 8,\n  sickMoves: 9,\n  nice: 7\n}];\nvar DOMAIN = [{\n  name: 'nice',\n  domain: [0, 100],\n  tickFormat: function tickFormat(t) {\n    return t;\n  }\n}, {\n  name: 'explosions',\n  domain: [6.9, 7.1]\n}, {\n  name: 'wow',\n  domain: [0, 11]\n}, {\n  name: 'dog',\n  domain: [0, 16]\n}, {\n  name: 'sickMoves',\n  domain: [0, 20]\n}];\n\nfunction generateData() {\n  return [_Object$keys(DATA[0]).reduce(function (acc, key) {\n    acc[key] = DATA[0][key] + 5 * (Math.random() - 0.5);\n    return acc;\n  }, {})];\n}\n\nvar AnimatedRadar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimatedRadar, _Component);\n\n  function AnimatedRadar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AnimatedRadar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AnimatedRadar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: DATA\n    });\n\n    return _this;\n  }\n\n  _createClass(AnimatedRadar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"centered-and-flexed\"\n      }, React.createElement(ShowcaseButton, {\n        onClick: function onClick() {\n          return _this2.setState({\n            data: generateData()\n          });\n        },\n        buttonContent: React.createElement(RefreshCcw, {\n          size: 14,\n          strokeWidth: 1\n        })\n      }), React.createElement(RadarChart, {\n        className: \"m-auto\",\n        animation: true,\n        data: data,\n        domains: DOMAIN,\n        style: {\n          polygons: {\n            fillOpacity: 0,\n            strokeWidth: 3\n          },\n          axes: {\n            text: {\n              opacity: 1\n            }\n          },\n          labels: {\n            textAnchor: 'middle'\n          }\n        },\n        margin: {\n          left: 30,\n          top: 30,\n          bottom: 40,\n          right: 50\n        },\n        tickFormat: function tickFormat(t) {\n          return '';\n        },\n        width: 400,\n        height: 276\n      }, React.createElement(CircularGridLines, {\n        tickValues: _toConsumableArray(new Array(10)).map(function (v, i) {\n          return i / 10 - 1;\n        })\n      })));\n    }\n  }]);\n\n  return AnimatedRadar;\n}(Component);\n\nexport { AnimatedRadar as default };","map":null,"metadata":{},"sourceType":"module"}