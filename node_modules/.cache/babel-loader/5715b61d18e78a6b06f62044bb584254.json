{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Form, Select, InputNumber, Switch, Radio, Slider, Button, Upload, Icon, Rate } from 'antd';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar RadioButton = Radio.Button;\nvar RadioGroup = Radio.Group;\n\nvar Demo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Demo, _React$Component);\n\n  function Demo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Demo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"normFile\", function (e) {\n      console.log('Upload event:', e);\n\n      if (_Array$isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    });\n\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 14\n        }\n      };\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit\n      }, React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Plain Text\"\n      }), React.createElement(\"span\", {\n        className: \"ant-form-text\"\n      }, \"China\")), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Select\",\n        hasFeedback: true\n      }), getFieldDecorator('select', {\n        rules: [{\n          required: true,\n          message: 'Please select your country!'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please select a country\"\n      }, React.createElement(Option, {\n        value: \"china\"\n      }, \"China\"), React.createElement(Option, {\n        value: \"usa\"\n      }, \"U.S.A\")))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Select[multiple]\"\n      }), getFieldDecorator('select-multiple', {\n        rules: [{\n          required: true,\n          message: 'Please select your favourite colors!',\n          type: 'array'\n        }]\n      })(React.createElement(Select, {\n        mode: \"multiple\",\n        placeholder: \"Please select favourite colors\"\n      }, React.createElement(Option, {\n        value: \"red\"\n      }, \"Red\"), React.createElement(Option, {\n        value: \"green\"\n      }, \"Green\"), React.createElement(Option, {\n        value: \"blue\"\n      }, \"Blue\")))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"InputNumber\"\n      }), getFieldDecorator('input-number', {\n        initialValue: 3\n      })(React.createElement(InputNumber, {\n        min: 1,\n        max: 10\n      })), React.createElement(\"span\", {\n        className: \"ant-form-text\"\n      }, \" machines\")), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Switch\"\n      }), getFieldDecorator('switch', {\n        valuePropName: 'checked'\n      })(React.createElement(Switch, null))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Slider\"\n      }), getFieldDecorator('slider')(React.createElement(Slider, {\n        marks: {\n          0: 'A',\n          20: 'B',\n          40: 'C',\n          60: 'D',\n          80: 'E',\n          100: 'F'\n        }\n      }))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Radio.Group\"\n      }), getFieldDecorator('radio-group')(React.createElement(RadioGroup, null, React.createElement(Radio, {\n        value: \"a\"\n      }, \"item 1\"), React.createElement(Radio, {\n        value: \"b\"\n      }, \"item 2\"), React.createElement(Radio, {\n        value: \"c\"\n      }, \"item 3\")))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Radio.Button\"\n      }), getFieldDecorator('radio-button')(React.createElement(RadioGroup, null, React.createElement(RadioButton, {\n        value: \"a\"\n      }, \"item 1\"), React.createElement(RadioButton, {\n        value: \"b\"\n      }, \"item 2\"), React.createElement(RadioButton, {\n        value: \"c\"\n      }, \"item 3\")))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Rate\"\n      }), getFieldDecorator('rate', {\n        initialValue: 3.5\n      })(React.createElement(Rate, null))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Upload\",\n        extra: \"longgggggggggggggggggggggggggggggggggg\"\n      }), getFieldDecorator('upload', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.normFile\n      })(React.createElement(Upload, {\n        name: \"logo\",\n        action: \"/upload.do\",\n        listType: \"picture\"\n      }, React.createElement(Button, null, React.createElement(Icon, {\n        type: \"upload\"\n      }), \" Click to upload\")))), React.createElement(FormItem, _extends({}, formItemLayout, {\n        label: \"Dragger\"\n      }), React.createElement(\"div\", {\n        className: \"dropbox\"\n      }, getFieldDecorator('dragger', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.normFile\n      })(React.createElement(Upload.Dragger, {\n        name: \"files\",\n        action: \"/upload.do\"\n      }, React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\"\n      }, React.createElement(Icon, {\n        type: \"inbox\"\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\"\n      }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\"\n      }, \"Support for a single or bulk upload.\"))))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 12,\n          offset: 6\n        }\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Demo;\n}(React.Component);\n\nexport default Form.create()(Demo);","map":null,"metadata":{},"sourceType":"module"}