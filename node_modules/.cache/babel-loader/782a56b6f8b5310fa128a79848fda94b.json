{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport React from \"react\";\nvar weatherIcons = {\n  '01d': '/static/weather/day.svg',\n  '02d': '/static/weather/cloudy-day-1.svg',\n  '03d': '/static/weather/cloudy-day-2.svg',\n  '04d': '/static/weather/cloudy-day-3.svg',\n  '09d': '/static/weather/rainy-4.svg',\n  '10d': '/static/weather/rainy-1.svg',\n  '11d': '/static/weather/thunder.svg',\n  '13d': '/static/weather/snowy-3.svg',\n  '50d': '/static/weather/cloudy-day-3.svg',\n  '01n': '/static/weather/night.svg',\n  '02n': '/static/weather/cloudy-night-1.svg',\n  '03n': '/static/weather/cloudy-night-2.svg',\n  '04n': '/static/weather/cloudy-night-3.svg',\n  '09n': '/static/weather/rainy-4.svg',\n  '10n': '/static/weather/rainy-5.svg',\n  '11n': '/static/weather/thunder.svg',\n  '13n': '/static/weather/snowy-5.svg',\n  '50n': '/static/weather/cloudy-day-3.svg'\n}; // Capitalize\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nexport function lowercase(string) {\n  return string.toLowerCase();\n} // Format price\n\nexport function formatPrice(number) {\n  var fnumber = _parseFloat(number);\n\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(fnumber);\n} // Get wind direction\n\nexport function windDirection(degree) {\n  var sectors = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];\n  degree += 22.5;\n\n  if (degree < 0) {\n    degree = 360 - Math.abs(degree) % 360;\n  } else {\n    degree = degree % 360;\n  }\n\n  var which = _parseInt(degree / 45, 10);\n\n  return sectors[which];\n} // Get weather icon class\n\nexport function getWeatherIcon(code, size) {\n  var icon = weatherIcons[code];\n  return React.createElement(\"span\", {\n    css: \"\\n        background: none, url(\".concat(icon, \") no-repeat;\\n        background-size: contain;\\n        width: \").concat(size, \"px;\\n        height: \").concat(size, \"px;\\n        display: inline-block;\\n      \")\n  });\n} // Get weather data\n\nexport function getWeather(_x, _x2, _x3) {\n  return _getWeather.apply(this, arguments);\n}\n\nfunction _getWeather() {\n  _getWeather = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(city, country, days) {\n    var forecast, forecast_call;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            forecast = undefined;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"//api.openweathermap.org/data/2.5/forecast?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(process.env.weatherApi, \"&cnt=\").concat(days, \"&units=metric\")).then(function (res) {\n              if (res.ok) {\n                return res;\n              } else {\n                throw Error(\"Request rejected with status \".concat(res.status));\n              }\n            }).catch(console.error);\n\n          case 4:\n            forecast_call = _context.sent;\n\n            if (!(forecast_call !== undefined)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return forecast_call.json();\n\n          case 8:\n            forecast = _context.sent;\n\n          case 9:\n            return _context.abrupt(\"return\", forecast);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", '');\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n  return _getWeather.apply(this, arguments);\n}\n\nfunction toCamelCase(str) {\n  return str.toLowerCase().replace(/[-_]+/g, ' ').replace(/[^\\w\\s]/g, '').replace(/ (.)/g, function ($1) {\n    return $1.toUpperCase();\n  }).replace(/ /g, '');\n}\n\nexport function objectToCamelCase(origObj) {\n  return _Object$keys(origObj).reduce(function (newObj, key) {\n    var val = origObj[key];\n    var newVal = typeof val === 'object' ? objectToCamelCase(val) : val;\n    newObj[toCamelCase(key)] = newVal;\n    return newObj;\n  }, {});\n}","map":null,"metadata":{},"sourceType":"module"}