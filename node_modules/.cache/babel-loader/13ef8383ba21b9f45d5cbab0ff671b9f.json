{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport MapGL, { Marker, NavigationControl, Popup } from 'react-map-gl';\nimport CITIES from '../demos/mock/cities.json';\nimport CityInfo from '../demos/map-gl/city-info';\nimport CityPin from '../demos/map-gl/city-pin';\nimport { Component } from 'react';\n\nvar MapMarkers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapMarkers, _Component);\n\n  function MapMarkers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapMarkers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapMarkers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      viewport: {\n        latitude: 37.785164,\n        longitude: -100,\n        zoom: 3.5,\n        bearing: 0,\n        pitch: 0\n      },\n      popupInfo: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateViewport\", function (viewport) {\n      _this.setState({\n        viewport: viewport\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCityMarker\", function (city, index) {\n      return React.createElement(Marker, {\n        key: \"marker-\".concat(index),\n        longitude: city.longitude,\n        latitude: city.latitude\n      }, React.createElement(CityPin, {\n        size: 20,\n        onClick: function onClick() {\n          return _this.setState({\n            popupInfo: city\n          });\n        }\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(MapMarkers, [{\n    key: \"_renderPopup\",\n    value: function _renderPopup() {\n      var _this2 = this;\n\n      var popupInfo = this.state.popupInfo;\n      return popupInfo && React.createElement(Popup, {\n        tipSize: 5,\n        anchor: \"top\",\n        longitude: popupInfo.longitude,\n        latitude: popupInfo.latitude,\n        onClose: function onClose() {\n          return _this2.setState({\n            popupInfo: null\n          });\n        }\n      }, React.createElement(CityInfo, {\n        info: popupInfo\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var viewport = this.state.viewport;\n      return React.createElement(\"div\", {\n        className: \"full-workspace\"\n      }, React.createElement(MapGL, _extends({}, viewport, {\n        width: \"100%\",\n        height: \"100%\",\n        mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n        onViewportChange: this._updateViewport,\n        mapboxApiAccessToken: process.env.mapBoxApi\n      }), CITIES.map(this._renderCityMarker), this._renderPopup(), React.createElement(NavigationControl, {\n        onViewportChange: this._updateViewport\n      })));\n    }\n  }]);\n\n  return MapMarkers;\n}(Component);\n\nexport default MapMarkers;","map":null,"metadata":{},"sourceType":"module"}