{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Mention, Form, Button } from 'antd';\nvar toContentState = Mention.toContentState,\n    getMentions = Mention.getMentions;\nvar FormItem = Form.Item;\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      initValue: toContentState('@afc163')\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReset\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.resetFields();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (errors, values) {\n        if (errors) {\n          console.log('Errors in the form!!!');\n          return;\n        }\n\n        console.log('Submit!!!');\n        console.log(values);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkMention\", function (rule, value, callback) {\n      var getFieldValue = _this.props.form.getFieldValue;\n      var mentions = getMentions(getFieldValue('mention'));\n\n      if (mentions.length < 2) {\n        callback(new Error('More than one must be selected!'));\n      } else {\n        callback();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      console.log('>> render', getFieldValue('mention') === this.state.initValue);\n      return React.createElement(Form, {\n        layout: \"horizontal\"\n      }, React.createElement(FormItem, {\n        id: \"control-mention\",\n        label: \"Top coders\",\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 16\n        }\n      }, getFieldDecorator('mention', {\n        rules: [{\n          validator: this.checkMention\n        }],\n        initialValue: this.state.initValue\n      })(React.createElement(Mention, {\n        suggestions: ['afc163', 'benjycui', 'yiminghe', 'RaoHai', '中文', 'にほんご']\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          span: 14,\n          offset: 6\n        }\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.handleSubmit\n      }, \"Submit\"), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        onClick: this.handleReset\n      }, \"Reset\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default Form.create()(App);","map":null,"metadata":{},"sourceType":"module"}