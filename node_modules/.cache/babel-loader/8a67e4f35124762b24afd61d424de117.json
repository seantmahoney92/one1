{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  .ant-carousel {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n  }\\n  .slick-slider {\\n    width: 100%;\\n    height: 100%;\\n  }\\n  .slick-slide > div {\\n    display: flex;\\n  }\\n  .image {\\n    position: relative;\\n    background-size: cover;\\n    background-position: top center;\\n    width: 100%;\\n  }\\n  .weakColor & .image {\\n    -webkit-filter: invert(100%);\\n    filter: invert(100%);\\n  }\\n  .content {\\n    position: relative;\\n    z-index: 9;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Carousel } from 'antd';\nimport styled from 'styled-components';\nvar Cover = styled.div(_templateObject());\n\nvar TaskItem = function TaskItem(_ref) {\n  var task = _ref.task,\n      provided = _ref.provided;\n  return React.createElement(\"div\", _extends({\n    className: \"shadow-sm bg-white mb-2 rounded\",\n    css: \"\\n      position: relative;\\n    \",\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps), React.createElement(\"div\", {\n    css: \"\\n        position: absolute;\\n        top: 16px;\\n        left: 0;\\n        height: 20px;\\n        width: 2px;\\n      \",\n    className: \"bg-\".concat(task.color)\n  }), React.createElement(\"div\", {\n    className: \"p-3\"\n  }, React.createElement(\"p\", {\n    className: \"mb-1\"\n  }, task.title), React.createElement(\"small\", {\n    className: \"text-muted d-block clearfix\"\n  }, task.description)), task.images && React.createElement(Cover, {\n    style: {\n      height: 150\n    }\n  }, React.createElement(Carousel, {\n    className: \"overflow-hidden\"\n  }, task.images.map(function (image, index) {\n    return React.createElement(\"div\", {\n      key: index\n    }, React.createElement(\"div\", {\n      key: index,\n      className: \"image rounded-bottom\",\n      style: {\n        backgroundImage: \"url(\".concat(image, \")\"),\n        height: 150\n      }\n    }));\n  }))));\n};\n\nexport default TaskItem;","map":null,"metadata":{},"sourceType":"module"}