{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport React from \"react\";\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { ArcSeries, FlexibleWidthXYPlot, XAxis, YAxis } from 'react-vis';\nimport { EXTENDED_DISCRETE_COLOR_RANGE as COLORS } from 'react-vis/dist/theme';\nimport { RefreshCcw } from 'react-feather';\nimport ShowcaseButton from '../showcase-components/showcase-button';\nvar PI = Math.PI;\n\nfunction updateData() {\n  var divider = Math.floor(Math.random() * 8 + 3);\n\n  var newData = _toConsumableArray(new Array(5)).map(function (row, index) {\n    return {\n      color: index,\n      radius0: Math.random() > 0.8 ? Math.random() + 1 : 0,\n      radius: Math.random() * 3 + 1,\n      angle: (index + 1) * PI / divider,\n      angle0: index * PI / divider\n    };\n  });\n\n  return newData.concat([{\n    angle0: 0,\n    angle: PI * 2 * Math.random(),\n    radius: 1.1,\n    radius0: 0.8\n  }]);\n}\n\nfunction updateLittleData() {\n  var portion = Math.random();\n  return [{\n    angle0: 0,\n    angle: portion * PI * 2,\n    radius0: 0,\n    radius: 10,\n    color: COLORS[13]\n  }, {\n    angle0: portion * PI * 2,\n    angle: 2 * PI,\n    radius0: 0,\n    radius: 10,\n    color: COLORS[12]\n  }];\n}\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: updateData(),\n      littleData: updateLittleData(),\n      value: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", null, React.createElement(ShowcaseButton, {\n        onClick: function onClick() {\n          return _this2.setState({\n            data: updateData(),\n            littleData: updateLittleData()\n          });\n        },\n        buttonContent: React.createElement(RefreshCcw, {\n          size: 14,\n          strokeWidth: 1\n        })\n      }), React.createElement(FlexibleWidthXYPlot, {\n        className: \"m-auto\",\n        xDomain: [-5, 5],\n        yDomain: [-5, 5],\n        height: 297\n      }, React.createElement(XAxis, null), React.createElement(YAxis, null), React.createElement(ArcSeries, {\n        animation: true,\n        radiusDomain: [0, 4],\n        data: this.state.data.map(function (row) {\n          if (_this2.state.value && _this2.state.value.color === row.color) {\n            return _objectSpread({}, row, {\n              style: {\n                stroke: 'black',\n                strokeWidth: '5px'\n              }\n            });\n          }\n\n          return row;\n        }),\n        colorRange: COLORS,\n        onValueMouseOver: function onValueMouseOver(row) {\n          return _this2.setState({\n            value: row\n          });\n        },\n        onSeriesMouseOut: function onSeriesMouseOut() {\n          return _this2.setState({\n            value: false\n          });\n        },\n        colorType: 'category'\n      }), React.createElement(ArcSeries, {\n        animation: true,\n        radiusType: 'literal',\n        center: {\n          x: -2,\n          y: 2\n        },\n        data: this.state.littleData,\n        colorType: 'literal'\n      })));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":null,"metadata":{},"sourceType":"module"}